name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        # Install torch separately with pip's timeout extension to handle large download
        pip install --timeout=600 "torch>=2.0.1,<2.1.0"
        # Install critical dependencies explicitly 
        pip install "tiktoken==0.7.0" regex requests boto3
        # Install the package with all dependencies including boto3
        pip install -e ".[all,dev]"
        
    - name: List installed packages
      run: |
        pip list
        
    - name: Run tests
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID || 'dummy_access_key' }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY || 'dummy_secret_key' }}
        AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'sk-dummy-openai-key' }}
      run: |
        # Skip standalone test files that connect to external services
        rm -f test_docs.py test_rag.py || true
        # Use pytest_addopts to skip tests that require actual API access
        PYTEST_ADDOPTS="-k 'not bedrock and not openai and not connect'" pytest --cov=assert_llm_tools
        
    - name: Generate coverage report
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID || 'dummy_access_key' }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY || 'dummy_secret_key' }}
        AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'sk-dummy-openai-key' }}
      run: |
        # Test files were already removed in the previous step
        PYTEST_ADDOPTS="-k 'not bedrock and not openai and not connect'" pytest --cov=assert_llm_tools --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false